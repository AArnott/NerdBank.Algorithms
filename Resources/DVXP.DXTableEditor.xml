<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DVXP.DXTableEditor</name>
    </assembly>
    <members>
        <member name="T:DVXPUtil.ADOUtil">
            <summary>
            ADO.NET Utils
            </summary>
        </member>
        <member name="M:DVXPUtil.ADOUtil.SetDefaultValues(System.Data.DataTable)">
            <summary>
            Initializes all columns of the given table with default values
            No default is assigned to auto increment fields and nullable fields
            foreign keys also don't have a default, their field names must be prefixed with 'fk'.
            Strings default to empty, numerics and booleans to 0/false, and foreign keys get to default.
            Derived classes can override this to set non-typical defaults.
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.CreateEditControlEventArgs">
            <summary>
            Arguments class for <see cref="E:DVXP.DXTableEditor.TableEditor.CreateEditControl"/> event. Used to pass
            a reference to the control that the table editor creates by default. The user can replace
            this reference by a self created control.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.CreateEditControlEventArgs.#ctor(System.Web.UI.Control,System.Data.DataColumn)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.CreateEditControlEventArgs.Col">
            <summary>
            The colum of the row that the control is being created
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.CreateEditControlEventArgs.EditControl">
            <summary>
            Contains a reference to the control that the table editor has created by default. You can
            replace this reference by a self created control.
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.SetEditControlValueEventArgs">
            <summary>
            Arguments class for <see cref="E:DVXP.DXTableEditor.TableEditor.SetEditControlValue"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SetEditControlValueEventArgs.#ctor(System.Web.UI.Control,System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.SetEditControlValueEventArgs.Row">
            <summary>
            The row that the field is in
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.SetEditControlValueEventArgs.Col">
            <summary>
            The colum of the field in the row to assign to the control
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.SetEditControlValueEventArgs.EditControl">
            <summary>
            Contains a reference to the control to which the Row[Col] value should be assigned.
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.SetEditControlValueEventArgs.IsHandled">
            <summary>
            Set this property to true if you have handled this event and the 
            <see cref="P:DVXP.DXTableEditor.SetEditControlValueEventArgs.EditControl"/> has been assigned a value
            </summary>
            <example>
            e.EditControl.Text = e.Row[e.Col].ToString();
            e.IsHandled = true;
            </example>
        </member>
        <member name="T:DVXP.DXTableEditor.GetEditControlValueEventArgs">
            <summary>
            Arguments class for <see cref="E:DVXP.DXTableEditor.TableEditor.GetEditControlValue"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.GetEditControlValueEventArgs.#ctor(System.Web.UI.Control,System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.GetEditControlValueEventArgs.Row">
            <summary>
            The row that the field is in
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.GetEditControlValueEventArgs.Col">
            <summary>
            The colum of the field in the row to assign
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.GetEditControlValueEventArgs.EditControl">
            <summary>
            Contains a reference to the control whose value should be assigned to e.Row[e.Col].
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.GetEditControlValueEventArgs.IsHandled">
            <summary>
            Set this property to true if you have handled this event and the 
            <see cref="P:DVXP.DXTableEditor.GetEditControlValueEventArgs.Row"/>'s field has been assigned a value
            </summary>
            <example>
            e.Row[e.Col] = e.EditControl.Text;
            e.IsHandled = true;
            </example>
        </member>
        <member name="T:DVXP.DXTableEditor.ExceptionUtil">
            <summary>
            Summary description for ExceptionUtil.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.ExceptionUtil.ExceptionDump(System.Exception)">
            <summary>
             Returns all (recursive) info about the given exception and its inner exceptions
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.FieldFormatEventArgs">
            <summary>
            Arguments class for <see cref="E:DVXP.DXTableEditor.TableEditor.FieldFormat"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.FieldFormatEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.String,System.Boolean)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.FieldFormatEventArgs.Row">
            <summary>
            The row that the field is in
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.FieldFormatEventArgs.Col">
            <summary>
            The colum of the row to format
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.FieldFormatEventArgs.Format">
            <summary>
            The .net format specified in the config file, e.g. {0:ddMMMyyyy}
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.FieldFormatEventArgs.IsGridView">
            <summary>
            Indicates if the formatting should be done for the grid view or the edit view.
            This allows for example for formatting long text fields in abbreviated form in the grid, 
            while still being able to edit the full text in edit mode.
            The client can perform custom HTML encoding of the FormattedValue 
            (see <see cref="M:DVXP.DXTableEditor.TableEditor.HTMLEncodeWithLineBreaksAndHyperlinks(System.String)"/>) if the htmlEncoding 
            attribute is set to false for this column in the XML Configuration file.
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.FieldFormatEventArgs.FormattedValue">
            <summary>
            Provide the formatted field value here, or leave at null to let the
            table editor format the field
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.ProvideDefaultRowValuesEventArgs">
            <summary>
            Arguments class for <see cref="E:DVXP.DXTableEditor.TableEditor.ProvideDefaultRowValues"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.ProvideDefaultRowValuesEventArgs.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideDefaultRowValuesEventArgs.Row">
            <summary>
            The newly created row for which the field values can be set to a custom default
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.FieldParseEventArgs">
            <summary>
            Arguments class for <see cref="E:DVXP.DXTableEditor.TableEditor.FieldParse"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.FieldParseEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.FieldParseEventArgs.Row">
            <summary>
            The row that the field is in
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.FieldParseEventArgs.Col">
            <summary>
            The colum of the row to format
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.FieldParseEventArgs.Text">
            <summary>
            The text for the field as provided by the user
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.FieldParseEventArgs.IsHandled">
            <summary>
            Set this property to true if the text is parsed and the 
            Row's column value is updated
            </summary>
            <example>
            e.Row[Col] = Integer.Parse(text);
            e.IsHandled = true;
            </example>
        </member>
        <member name="T:DVXP.DXTableEditor.BeforeRowUpdateEventArgs">
            <summary>
            Arguments class for <see cref="E:DVXP.DXTableEditor.TableEditor.BeforeRowUpdate"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.BeforeRowUpdateEventArgs.#ctor(System.Data.DataRow)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.BeforeRowUpdateEventArgs.Row">
            <summary>
            The row that is about to be updated, added or deleted. Check the RowState property
            of the row to retrieve the type of updated. When validating, throw an exception
            if the row does not meet the validation criteria.
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.HtmlUtil">
            <summary>
            Summary description for HtmlUtil.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.HtmlUtil.HTMLEncodeWithLineBreaks(System.Object)">
            <summary>
            HTML Encodes the given string, replaces cr/lf with <br></br>-tags
            and inserts hyperlinks around http:// strings
            </summary>
            <param name="s">As Object to allow for late binding in C# in aspx files</param>
        </member>
        <member name="M:DVXP.DXTableEditor.HtmlUtil.HTMLEncodeWithLineBreaksAndHyperlinks(System.Object)">
            <summary>
            HTML Encodes the given string, replaces cr/lf with <br></br>-tags
            and inserts hyperlinks around http:// strings
            </summary>
            <param name="s">As Object to allow for late binding in C# in aspx files</param>
        </member>
        <member name="M:DVXP.DXTableEditor.HtmlUtil.EncodeWithHyperlinks(System.String)">
            <summary>
            Encodes inserts hyperlinks around http:// strings
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.LicCheck">
            <summary>
            Checks the license of the control
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.LicCheck.GetResourceStream(System.String)">
            <summary>
            Returns the resource from the resource identied by the namespace/filename
            in the calling assembly
            </summary>
            <param name="resourceName"></param>
            <returns></returns>
        </member>
        <member name="T:DVXP.DXTableEditor.MasterDetailAssignment">
            <summary>
            Binds a sub-table editor to a parent table editor.
            Also see the <see cref="P:DVXP.DXTableEditor.TableEditor.MasterTableEditorBinding"/> property.
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.MasterDetailAssignment.parent">
            <summary>
            Back reference to send change notification at runtime
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.MasterDetailAssignment.master">
            <summary>
            The parent table editor
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.MasterDetailAssignment.masterPrimaryKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.MasterDetailAssignment.detailParameterName">
            <summary>
            
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.MasterDetailAssignment.#ctor(DVXP.DXTableEditor.TableEditor)">
            <summary>
            Preffered constructor, pass in the future parent for this binding. Note that
            ASP.NET calls the default constructor instead when creating a binding from a 
            ASPX-page template. Therefore, we provide a default constructor as well and
            make sure that the TableEditor assigns itself as the parent using the internal
            property Parent.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.MasterDetailAssignment.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.MasterDetailAssignment.NotifyParent">
            <summary>
            Notify parent of binding change. Is used to store binding in viewstate
            after the user changes a binding property at runtime
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.MasterDetailAssignment.Parent">
            <summary>
            Assigns the parent that contains this binding. Only called from the property setter
            in the table editor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.MasterDetailAssignment.MasterTableEditor">
            <summary>
            The master (parent) table editor that this child editor is bound to
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.MasterDetailAssignment.MasterPrimaryKeyName">
            <summary>
            The primary key column name of the master table. For example OrderID in an Orders table.
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.MasterDetailAssignment.DetailParameterName">
            <summary>
            The parameter name used in the XML configuration file of this table editor to
            select the rows corresponding to the currently selected record in the master table.
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.ProvideSelectCommandEventArgs">
            <summary>
            Used to retrieve select command and primary key
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.ProvideSelectCommandEventArgs.#ctor(System.Data.OleDb.OleDbConnection,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideSelectCommandEventArgs.SelectCommand">
            <summary>
            The Select command
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideSelectCommandEventArgs.Connection">
            <summary>
            Open connection to the database. Must be assigned to the generated command
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideSelectCommandEventArgs.TableName">
            <summary>
            The table to provide the command for
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideSelectCommandEventArgs.PKColumnNames">
            <summary>
            Primary key column names of the table (needed for stored procs and tables
            that don't return PK metadata themselves)
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.ProvideUpdateCommandsEventArgs">
            <summary>
            Used to retrieve update/insert/delete commands
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.ProvideUpdateCommandsEventArgs.#ctor(System.Data.OleDb.OleDbConnection,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideUpdateCommandsEventArgs.UpdateCommand">
            <summary>
            The Update command
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideUpdateCommandsEventArgs.InsertCommand">
            <summary>
            The Insert command
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideUpdateCommandsEventArgs.DeleteCommand">
            <summary>
            The Delete command
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideUpdateCommandsEventArgs.Connection">
            <summary>
            Open connection to the database. Must be assigned to the generated command
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideUpdateCommandsEventArgs.TableName">
            <summary>
            The table to provide the command for
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.ProvideAutoIncrementIdCommandEventArgs">
            <summary>
            Used to provide a command for retrieving the DB generated ID value of a new row
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.ProvideAutoIncrementIdCommandEventArgs.#ctor(System.Data.OleDb.OleDbConnection,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideAutoIncrementIdCommandEventArgs.AutoIncrementIdCmd">
            <summary>
            The command to retrieve the autoincrement ID, e.g. 'SELECT @@IDENTY AS PK' or 'SELECT SCOPE_IDENTITY() AS PK'
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideAutoIncrementIdCommandEventArgs.Connection">
            <summary>
            Open connection to the database. Must be assigned to the generated command
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideAutoIncrementIdCommandEventArgs.TableName">
            <summary>
            The table to provide the command for
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.ProvideLookupCommandEventArgs">
            <summary>
            Used to retrieve a column lookup command
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.ProvideLookupCommandEventArgs.#ctor(System.Data.OleDb.OleDbConnection,System.String,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideLookupCommandEventArgs.LookupCommand">
            <summary>
            The Lookup command
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideLookupCommandEventArgs.Connection">
            <summary>
            Open connection to the database. Must be assigned to the generated command
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideLookupCommandEventArgs.TableName">
            <summary>
            The table to provide the command for
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.ProvideLookupCommandEventArgs.ColumnName">
            <summary>
            The column to provide the command for
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.RowSelectedEventArgs">
            <summary>
            Holds information about the newly selected row
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.RowSelectedEventArgs.#ctor(System.String,System.Data.DataRow,System.String)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.RowSelectedEventArgs.Row">
            <summary>
            The row that is selected
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.RowSelectedEventArgs.TableName">
            <summary>
            The name of the current table (as specified in the config file)
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.RowSelectedEventArgs.CommandName">
            <summary>
            The commandName of the selectButton (as specified in the config file) that 
            caused the row to be selected
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.SqlUtil">
            <summary>
            System.Data.Sql utilities
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.CloneCommand(System.Data.SqlClient.SqlCommand)">
            <summary>
            Returns a deep copy including the parameters of the given command
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.BuildUpdateAdapter(System.Data.SqlClient.SqlCommand,System.String,System.String)">
            <summary>
            Returns a new SqlDataAdapter that can be used to perform updates from a dataset
            based on the given select command. Note that the table should not have an auto increment
            identity column (use BuildUpdateAdapterWithIdentity for those)
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.BuildUpdateAdapterWithIdentity(System.String,System.Data.SqlClient.SqlConnection,System.String,System.String)">
            <summary>
            Returns a new SqlDataAdapter that can be used to perform updates from a dataset
            based on the given select command.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.BuildUpdateAdapterWithIdentity(System.Data.SqlClient.SqlCommand,System.String,System.String)">
            <summary>
            Returns a new SqlDataAdapter that can be used to perform updates from a dataset
            based on the given select command. Note that the Connection and Transaction properties
            are copied from the select command.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.BuildUpdateAdapterForBulkInsert(System.Data.SqlClient.SqlCommand,System.String,System.String)">
            <summary>
            Returns a new SqlDataAdapter that can be used to perform bulk inserts
            that allow explicit specification of an idenity column
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.AddCmdParam(System.Data.SqlClient.SqlCommand,System.String,System.Object,System.Data.SqlDbType,System.Data.ParameterDirection,System.Int32)">
            <summary>
            Adds a parameter to the given command with the given properties
            </summary>
            <param name="cmd"></param>
            <param name="name"></param>
            <param name="sqltype"></param>
            <param name="value"></param>
            <param name="direction"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.AddCmdParam(System.Data.SqlClient.SqlCommand,System.String,System.Object,System.Data.SqlDbType)">
            <summary>
            Adds an input paramater to the given command
            </summary>
            <param name="cmd"></param>
            <param name="name"></param>
            <param name="sqltype"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.AddCmdParam(System.Data.SqlClient.SqlCommand,System.String,System.Object)">
            <summary>
            Adds an input paramater to the given command, deriving its type dynamically
            </summary>
            <param name="cmd"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.SqlDbTypeFromType(System.Type)">
            <summary>
            Returns the most appropreate SQL paramter type for the given .net type
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.SqlCommandStoredProc(System.String,System.Data.SqlClient.SqlConnection)">
            <summary>
            Returns a command object initialized for calling the stored procedure
            with the given name
            </summary>
            <returns></returns>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.SqlCommandStoredProc(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
            <summary>
            Returns a command object initialized for calling the stored procedure
            with the given name
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.ConnectionStringSplit(System.String,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Retrieves the SQL Database properties from the given connection string
            if integrated security is used, user id and password return null
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.EncodeStringLiteral(System.String)">
            <summary>
            Encodes the given literal string as a sql string (surrounds the string
            with quotes and replaces single quotes by double quoutes)
            </summary>
            <param name="inputString"></param>
            <returns></returns>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.ConstraintNames(System.Data.DataSet)">
            <summary>
            Returns the constains info for the given table
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.ConstraintNames(System.Data.DataTable)">
            <summary>
            Returns the constains info for the given table
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.ViolatedContraint(System.Data.DataSet)">
            <summary>
            This function returns the constaint that causes EnableContraints to fail
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.SetRowStateAdded(System.Data.DataTable)">
            <summary>
            Marks all rows in the given table with rowstate Added. As RowState is a readonly
            property, this requires removed and re-adding the rows
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.SqlUtil.AppendWhere(System.Data.SqlClient.SqlCommand,System.Text.StringBuilder,System.String,System.String,System.Object)">
            <summary>
            Appends an 'AND' WHERE clause to the given where clause string and 
            
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.StringUtil">
            <summary>
            Utility functions for strings
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.StringUtil.IsEmpty(System.String)">
            <summary>
            Returns a boolean indicating if the given string is empty or null
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.StringUtil.Denullify(System.Object)">
            <summary>
            Returns the given string, or the Empty string if null is given
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.StringUtil.SplitEncodedString(System.String)">
            <summary>
            Split a string into parts. Each part is delimited by one or more spaces.
            Parts may be surrounded by single (') or double (") quotes.
            </summary>
            <param name="s">The string to split</param>
            <returns>An array of strings containing the parts</returns>
        </member>
        <member name="M:DVXP.DXTableEditor.StringUtil.SplitEncodedString(System.String,System.Char)">
            <summary>
            Split a string into parts. Each part is delimited by one or more of the the <code>delimiter</code> character.
            Parts may be surrounded by single (') or double (") quotes.
            </summary>
            <param name="s">The string to split</param>
            <param name="delimiter">The character that delimits the parts</param>
            <returns>An array of strings containing the parts</returns>
        </member>
        <member name="M:DVXP.DXTableEditor.StringUtil.SplitEncodedString(System.String,System.String)">
            <summary>
            Split a string into parts. Each part is delimited by one or more of the characters in <code>delimiters</code>.
            Parts may be surrounded by single (') or double (") quotes.
            Delimiters at the start and end of the string are removed; multiple delimiters between parts are ignored.
            The optional quotes around parts are removed.
            </summary>
            <param name="s">The string to split</param>
            <param name="delimiters">A string containing all delimiters</param>
            <returns>An array of strings containing the parts</returns>
        </member>
        <member name="M:DVXP.DXTableEditor.StringUtil.ValueOrEmpty(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Returns the value of the given item in the given collection, or the empty string if it doesn't exist
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor">
            <summary>
            Generic OLEDB database table editor
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.NEW_ROW_KEY">
            <summary>
            Used as PKID for new rows
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.rowsGrid">
            <summary>
            The grid
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.editColumn">
            <summary>
            The column with the edit button
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.tablesCombo">
            <summary>
            Table selection combo
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.tablesComboPlaceHolder">
            <summary>
            Table selection combo place holder
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.tdTablesLabelCell">
            <summary>
            Table selection combo label cell
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.tdTablesComboCell">
            <summary>
            Table selection combo cell
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.searchTextBox">
            <summary>
            Search text box
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.searchButton">
            <summary>
            Search button
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.searchResetButton">
            <summary>
            Search reset button
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.editPanel">
            <summary>
            Edit panel div
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.editPanelPlaceHolderTop">
            <summary>
            Achor for not-inplace editing panel (top position)
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.editPanelPlaceHolderBottom">
            <summary>
            Achor for not-inplace editing panel (bottom position)
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.errorLabel">
            <summary>
            The error label
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.confirmDeleteCheckBox">
            <summary>
            The confirm checkbox
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.prevPageButton">
            <summary>
            The previous page button
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.nextPageButton">
            <summary>
            The next page button
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.internalViewState">
            <summary>
            Internal viewstate for this table editor. Not stored in ASP.NET viewstate because we
            need to re-create the controls in EnsureChildControls, which is called before viewstate is restored
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.configFilePath">
            <summary>
            Table editor XML config file
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.columnConfigCache">
            <summary>
            Map of column names of current table to column config record
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.isOnInitCompleted">
            <summary>
            This flag is used to see if a property value should be stored in viewstate. All properties
            set before OnInit are set by the ASP.NET page template, and therefore need not be stored in viewstate
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.isOnLoadCompleted">
            inside Form_Load on a postback
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.isSearchReset">
            <summary>
            Indicates if Show All was clicked
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.isReboundByClient">
            <summary>
            Indicates client has called Rebind()
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.boundMaster">
            <summary>
            The master that this detail is currently bound to
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.parameters">
            <summary>
            Template params (NOTE: NameValueCollection is not used as it uses
            more serialization space in viewstate)
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.providedPKColumnNames">
            <summary>
            Name of primary key columns, provided by ProvidedSelectCommand
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.allowSearch">
            <summary>
            Indicates if search box is visible
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.allowSearchReset">
            <summary>
            Indicates if search reset button is visible
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.connectionString">
            <summary>
            The SQL Server connection string for the tables
            Is read from configuration file, or can be set from OnInit event of
            host page. Page_Load event cannot be used to pass connection string because the control
            is already loaded by then
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.cssClassGridHeaderCell">
            <summary>
            Grid and edit panel control CSS styles
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.textTableSelectLabel">
            <summary>
            Text captions
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.pageSize">
            <summary>
            Size of the grid pages (number of rows per page). Use value smaller than 1 to disable paging
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.textPagerCaption">
            <summary>
            Caption for the pager
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.textNullDisplay">
            <summary>
            Replacement text for null values
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.maxTextBoxColumns">
            <summary>
            Maximum number of columns in a text box
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.maxTextBoxRows">
            <summary>
            Maximum number of rows in a text box
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.editInGrid">
            <summary>
            Indicates if editing should be done inside the grid
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.autoRowSelect">
            <summary>
            Indicates if first row of new page should be selected automatically
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.addButtonLocation">
            <summary>
            Location of add button
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.showPrevNextPagerButtons">
            <summary>
            Indicates if Previous and Next links are present as well as page numbers
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.masterDetailAssignment">
            <summary>
            Relates this table editor details control to the specified master.
            By initially creating a blank master detail assignment, the master detail assignment
            is made expandable in the properties window at all times.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnInit(System.EventArgs)">
            <summary>
            First event in the lifetime of the control
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.LoadViewState(System.Object)">
            <summary>
            Second event in the life time of the control.
            
            Assures tables combo and grid current page are restored to the originally selected value
            stored in the view state during PreRender. 
            By restoring these properties here, just before the postback processing of the framework 
            starts, the framework can correctly determine if an item change event should fire
            </summary>
            <param name="savedState"></param>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.RestoreParametersFromViewState(System.Collections.Hashtable)">
            <summary>
            Stores the given parameters collection (that is retrieved from either the
            internal viewstate (if this control is visible) or the page viewstate
            into the member parameters field, and update the master/detail binding
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnLoad(System.EventArgs)">
            <summary>
            Third event in the life time of the control. Postback events have not yet fired here.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.SaveViewState">
            <summary>
            Saves viewstate. Note that we do not use OnPreRender for this because
            that is not called when this control is invisible.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.Rebind">
            <summary>
            Reloads all data (applies parameters) and displays it. Used by external
            clients; validates that rebind is called from an eventhandler and not from page_load
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.RebindInternal">
            <summary>
            Reloads all data (applies parameters) and displays it
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.BindToMaster">
            <summary>
            Hooks up this control to it's master
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.RebindGrid">
            <summary>
            Rebinds the controls
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.SelectCurrentRow">
            <summary>
            Assign the selected index (needed because grid has no viewstate)
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.CurrentTableChanged">
            <summary>
            Handles a table change
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.EnsureLoadConfig">
            <summary>
            Ensures config file is loaded
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.LoadConfig">
            <summary>
            Loads the config file and applies parameters
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.GetResourceStream(System.String)">
            <summary>
            Returns the resource from the resource identied by the namespace/filename
            in the calling assembly
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.EnsureLoadDataSets">
            <summary>
            Ensures current table is loaded
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.LoadDataSets">
            <summary>
            Loads current table, applying current search criteria
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.LoadDataSets(System.Boolean)">
            <summary>
            Loads current table
            </summary>
            <param name="currentRowVisible">
            Indicates if current row should be loaded even when
            search criteria are not met.</param>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.EnsureChildControls">
            <summary>
            In this override, all controls should be re-created exactly as they
            were before the form postback. 
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.CreateChildControlsImpl">
            <summary>
            Creates the child controls
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.CreateTablesCombo">
            <summary>
            Creates the combo
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.CreateGridCols">
            <summary>
            Creates the grid columns
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.CreateGridColsOrdered">
            <summary>
            Creates grid columns according to specified order
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.CreateGridCol(System.Data.DataColumn)">
            <summary>
            Creates a grid column for the given table column
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.ColumnConfig(System.String)">
            <summary>
            Returns the row from the XML config file describing the given column
            of the currently selected table. returns null if column not in XML file.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OrderedColumns">
            <summary>
            Returns a sorted view on the config records for columns that have an order attribute set
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.SelectButtonsView">
            <summary>
            Returns view on the config records for select buttons
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.IsColVisible(System.String,System.String)">
            <summary>
            Returns a boolean indicating if the given column of the current table is visible
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.CreateEditPanelControls">
            <summary>
            (Re)creates the labels and text boxes to edit the current row
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.PlaceEditPanel">
            <summary>
            Positions the edit panel (above or inside the grid)
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnCreateEditControl(DVXP.DXTableEditor.CreateEditControlEventArgs)">
            <summary>
            Raises the <see cref="E:DVXP.DXTableEditor.TableEditor.CreateEditControl"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnCreateEditControl(System.Web.UI.WebControls.Table,System.Data.DataColumn,System.Int16@)">
            <summary>
            Creates the edit control for the given column
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.EnableViewStateInParentControls(System.Web.UI.Control)">
            <summary>
            Enables viewstate for all parent controls of the given control
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.FillEditPanelControls">
            <summary>
            Fills the text boxes with the values of the current row
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnSetEditControlValue(System.Web.UI.Control,System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Raises the <see cref="E:DVXP.DXTableEditor.TableEditor.SetEditControlValue"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnSetEditControlValue(DVXP.DXTableEditor.SetEditControlValueEventArgs)">
            <summary>
            Raises the <see cref="E:DVXP.DXTableEditor.TableEditor.SetEditControlValue"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.CreateButton(System.Web.UI.WebControls.WebControl,System.String,System.String,System.Int16@)">
            <summary>
            Creates a command button
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.CreateCheckBox(System.Web.UI.WebControls.WebControl,System.String,System.String,System.Int16@)">
            <summary>
            Creates a confirm delete checkbox
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.CurrentRow">
            <summary>
            Returns the current row selected by the select command in the grid
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OpenConnection">
            <summary>
            Opens the DB connection
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.IsAddNewMode">
            <summary>
            Indicates if we have an new row open in edit mode
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.Update(System.Boolean)">
            <summary>
            Saves the values of the currently edited row
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.PerformAllUpdates(System.Data.DataRow)">
            <summary>
            Updates the DB with changes in the DS
            </summary>
            <returns>Key of new row to select</returns>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.FormatBoolValue(System.Object,System.String)">
            <summary>
            Formats the given boolean grid cell object value to a string. Not that all other
            datatypes are formated using a .net formatting string in the dataview.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.FindListItemByValue(System.Web.UI.WebControls.ListItemCollection,System.String)">
            <summary>
            Looks for the given value in the list items, ignoring case (if that is the
            default compare setting in SQL and is used for matching relations)
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.RowKey(System.Data.DataRow)">
            <summary>
            Returns the primary key of the given row separated by 0-characters
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.PrimaryKey">
            <summary>
            Returns the primary key constraint of the current table
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.SetCurrentRowKey(System.String,System.String)">
            <summary>
            The primary key of the currently selected row. Represents the currently
            selected row
            </summary>
            <param name="value">Key of newly selected row</param>
            <param name="commandName">The command that caused the selection to change</param>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.IsAllowed(System.String)">
            <summary>
            Returns the current value for the current config table attribute allowAdd/Edit/Delete
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.AllowAdd">
            <summary>
            Indicates if rows may be added to the current table
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.AllowEdit">
            <summary>
            Indicates if rows may be edited in the current table
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.AllowDelete">
            <summary>
            Indicates if rows may be deleted from the current table
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.HTMLEncodeWithLineBreaksAndHyperlinks(System.String)">
            <summary>
            HtmlEncodes the given text, converting Urls to hyperlinks and replacing line breaks
            with BR tags.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnGetEditControlValue(System.Web.UI.Control,System.Data.DataRow,System.Data.DataColumn)">
            <summary>
            Raises the <see cref="E:DVXP.DXTableEditor.TableEditor.GetEditControlValue"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnGetEditControlValue(DVXP.DXTableEditor.GetEditControlValueEventArgs)">
            <summary>
            Raises the <see cref="E:DVXP.DXTableEditor.TableEditor.GetEditControlValue"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnFieldParse(DVXP.DXTableEditor.FieldParseEventArgs)">
            <summary>
            Raise the <see cref="E:DVXP.DXTableEditor.TableEditor.FieldParse"/> event. Parses the text entered by the user
            and updates the row's field.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnBeforeRowUpdate(DVXP.DXTableEditor.BeforeRowUpdateEventArgs)">
            <summary>
            Raise the <see cref="E:DVXP.DXTableEditor.TableEditor.BeforeRowUpdate"/> event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnProvideDefaultRowValues(DVXP.DXTableEditor.ProvideDefaultRowValuesEventArgs)">
            <summary>
            Raises the <see cref="E:DVXP.DXTableEditor.TableEditor.ProvideDefaultRowValues"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnProvideDefaultRowValues(System.Data.DataRow)">
            <summary>
            Raises the <see cref="E:DVXP.DXTableEditor.TableEditor.ProvideDefaultRowValues"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnFieldFormat(DVXP.DXTableEditor.FieldFormatEventArgs)">
            <summary>
            Raises the <see cref="E:DVXP.DXTableEditor.TableEditor.FieldFormat"/> event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnFieldFormat(System.Data.DataRow,System.Data.DataColumn,System.Boolean)">
            <summary>
            Formats the given field
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnRowSelected(DVXP.DXTableEditor.RowSelectedEventArgs)">
            <summary>
            Raise the RowSelected event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnRowSelected(System.Data.DataRow,System.String)">
            <summary>
            Raise the RowSelected event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnRowDeselected(System.EventArgs)">
            <summary>
             Raise the RowDeselected event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnRowDeselected">
            <summary>
             Raise the RowDeselected event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnProvideSelectCommand(DVXP.DXTableEditor.ProvideSelectCommandEventArgs)">
            <summary>
            Raise the ProvideSelectCommand event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnProvideLookupCommand(DVXP.DXTableEditor.ProvideLookupCommandEventArgs)">
            <summary>
            Raise the ProvideLookupCommand event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnProvideAutoIncrementIdCommand(DVXP.DXTableEditor.ProvideAutoIncrementIdCommandEventArgs)">
            <summary>
            Raise the ProvideAutoIncrementIdCommand event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.OnProvideUpdateCommands(DVXP.DXTableEditor.ProvideUpdateCommandsEventArgs)">
            <summary>
            Raise the ProvideUpdateCommands event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.rowsGrid_ItemCreated(System.Object,System.Web.UI.WebControls.DataGridItemEventArgs)">
            <summary>
            Formats grid rows
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.rowsGrid_ItemDataBound(System.Object,System.Web.UI.WebControls.DataGridItemEventArgs)">
            <summary>
            HTML Encodes all databound text
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.rowsGrid_SortCommand(System.Object,System.Web.UI.WebControls.DataGridSortCommandEventArgs)">
            <summary>
            Handles the column sort command
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.rowsGrid_PageIndexChanged(System.Object,System.Web.UI.WebControls.DataGridPageChangedEventArgs)">
            <summary>
            Handles grid pager event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.rowsGrid_ItemCommand(System.Object,System.Web.UI.WebControls.DataGridCommandEventArgs)">
            <summary>
            Handles the selection button commands
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.tablesCombo_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the table select event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.addButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles add button click
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.updateButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles update click event
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.cancelButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles cancel button click
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.deleteButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles delete button click
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.searchButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles search button click
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.searchResetButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles search reset button click
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.masterEditor_RowSelected(System.Object,DVXP.DXTableEditor.RowSelectedEventArgs)">
            <summary>
            Handles the row selection event of a bound master table editor
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.HandleMasterEditorRowSelected(System.Data.DataRow)">
            <summary>
            Handles the row selection event of a bound master table editor
            </summary>
            <param name="selectedMasterRow"></param>
        </member>
        <member name="M:DVXP.DXTableEditor.TableEditor.masterEditor_RowDeselected(System.Object,System.EventArgs)">
            <summary>
            Handles the row deselection event of a bound master table editor
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.CreateEditControl">
            <summary>
            Can be used to customize the appearance of edit controls. Can also be used to replace
            a standard edit control by a self-created control.
            </summary>
            <remarks>
            Note that the ViewState of the TableEditor will get much larger than usual 
            when you add a custom edit control that has its <see cref="P:System.Web.UI.Control.EnableViewState"/>
            property set to true (the default value). This is caused by the viewstate of the DataGrid 
            that contains the edit control. 
            To prevent this, remember to set EnableViewState of self-created controls to false if possible, 
            or else consider setting the <see cref="P:DVXP.DXTableEditor.TableEditor.EditInGrid"/> property to false.
            This will also prevent this issue because then the edit control is not shown inside the DataGrid.
            </remarks>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.SetEditControlValue">
            <summary>
            Used to assign a field value to an edit control. This can be a self-created control
            or a default control (TextBox, CheckBox or DropDownList) that has been created 
            by the TableEditor.
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.GetEditControlValue">
            <summary>
            Used to retrieve a field value from an edit control.
            This can be a self-created control or a default control (TextBox, CheckBox 
            or DropDownList) that has been created by the TableEditor.
            Therefore, this is a more powerful version of the <see cref="E:DVXP.DXTableEditor.TableEditor.FieldParse"/> event.
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.BeforeRowUpdate">
            <summary>
            Fired just before a row change (add, edit, delete) is applied to the database. The
            column values in the <see cref="P:DVXP.DXTableEditor.BeforeRowUpdateEventArgs.Row"/> can be validated 
            or massaged in this event.
            Note that when a new row is added, BeforeRowUpdate is fired twice. First it is called
            before the row is added to the Table; the row's <see cref="P:System.Data.DataRow.RowState"/> property 
            is Detached. At this time, any fields that do not allow null values can be given default values 
            After the row is added to the table, but before the changes are applied to the
            database, BeforeRowUpdate is called once more with a <see cref="P:System.Data.DataRow.RowState"/> 
            of Added. At this time, validation can be done on the row (you can throw an exception if invalid
            data is entered by the user).
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.ProvideDefaultRowValues">
            <summary>
            Fired when a new row is created. Allows for providing custom default field values
            </summary>
            <remarks>Especially useful to generate field values when the showInEditPanel 
            column configuration attribute is disabled
            </remarks>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.FieldParse">
            <summary>
            Fired when a text box field value must be parsed. Also see the <see cref="E:DVXP.DXTableEditor.TableEditor.GetEditControlValue"/>
            event, that is not only fired for text box fields, but also for any other edit control.
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.FieldFormat">
            <summary>
            Fired when a field is formatted for display in either the grid-view or an edit text box.
            This event allows for custom field formatting. Also see the <see cref="E:DVXP.DXTableEditor.TableEditor.SetEditControlValue"/>
            event for more powerful customization of edit control values.
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.ProvideSelectCommand">
            <summary>
            Fired when the a select command is needed for the current table
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.ProvideUpdateCommands">
            <summary>
            Fired when the a update/insert/delete commands are needed for the current table
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.ProvideAutoIncrementIdCommand">
            <summary>
            Fired after a new row with an auto increment field is added to the database
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.ProvideLookupCommand">
            <summary>
            Fired when the a lookup command is needed for the current table
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.RowSelected">
            <summary>
            Fired when a user clicks a 'select details' button
            </summary>
        </member>
        <member name="E:DVXP.DXTableEditor.TableEditor.RowDeselected">
            <summary>
            Fired when current selection is lost
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CurrentTable">
            <summary>
            Returns the currently selected table
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CurrentRowKey">
            <summary>
            The primary key of the currently selected row. Represents the currently
            selected row
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.PreviousSearchText">
            <summary>
            The text of the previous search. Used to see if after a click on the search
            button (which happens to be the default in most cases and reacts to the Enter key)
            it is really necessary to perform search and loose the current selection
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CurrentSearchText">
            <summary>
            Returns the currently entered search expression
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CurrentRowInEditMode">
            <summary>
            Indicates if the current row is in edit mode
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.DesignMode">
            <summary>
            Indicates if we are running in the designer
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.IsConfigured">
            <summary>
            Indicates if this control is configured and ready to display data
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.IsPagingEnabled">
            <summary>
            Indicates if the grid uses paging
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.HasMasterDetailBinding">
            <summary>
            Indicates if this is a detail table editor bound to a master table editor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.ConfigFilePath">
            <summary>
            The path to the XML configuration file for this table editor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.ConnectionString">
            <summary>
            The OleDb or SQL Server connection string for accessing the tables. If not set, it is read from 
            the configuration file. This property can also be set in the OnInit event of
            host page (The Page_Load event cannot be used to pass connection string because the control
            is already loaded by then).
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClass">
            <summary>
            Not browsable as there is no general css class for this control
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassGridHeaderCell">
            <summary>
            Header cell CSS style
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassHeaderLink">
            <summary>
            Header text link CSS style
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassGridItemCell">
            <summary>
            Grid cell CSS style
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassGridRowAlternating">
            <summary>
            Alternating row CSS style
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassGridRowSelected">
            <summary>
            CSS style of selected row
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassGridRow">
            <summary>
            CSS style of regular grid row
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassEditLabelCell">
            <summary>
            CSS style of field caption labels in edit mode
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassTextBox">
            <summary>
            CSS style of text boxes
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassCheckBox">
            <summary>
            CSS style of checkboxes
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassCombo">
            <summary>
            CSS style of combo boxes
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassButton">
            <summary>
            CSS style of buttons
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassHorizontalRule">
            <summary>
            CSS style of horizontal rules
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassErrorLabel">
            <summary>
            CSS style of error message
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassTableSelectLabel">
            <summary>
            CSS style of caption label of table selection combo
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.CssClassTableSelectCombo">
            <summary>
            CSS style of table selection combo box
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextTableSelectLabel">
            <summary>
            Text displayed in caption label of table selection combo
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextSearchLabel">
            <summary>
            Text displayed in label of search text box
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextSearchButton">
            <summary>
            Text displayed in the search button
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextSearchResetButton">
            <summary>
            Text of the Show All button
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextEditButton">
            <summary>
            Text displayed in the Edit button
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextNewButton">
            <summary>
            Text displayed in the Add button
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextUpdateButton">
            <summary>
            Text displayed in the Save button
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextCancelButton">
            <summary>
            Text displayed in the Cancel button
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextDeleteButton">
            <summary>
            Text displayed in the Delete button
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextDeleteConfirmation">
            <summary>
            Text displayed in the Confirm Delete label
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.PageSize">
            <summary>
            Size of the grid pages (number of rows per page). Use value smaller than 1 to disable paging
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextPagerCaption">
            <summary>
            Caption for the pager
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextNullDisplay">
            <summary>
            Replacement text for null values
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.MaxTextBoxColumns">
            <summary>
            Default maximum number of columns in a text box
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.MaxTextBoxRows">
            <summary>
            Default maximum number of rows in a text box
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.AllowSearch">
            <summary>
            Allows or hides search function
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.AllowSearchReset">
            <summary>
            Indicates if search reset button is visible
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextTrue">
            <summary>
            Text for display 'true' boolean in grid 
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextFalse">
            <summary>
            Text for display 'false' boolean in grid 
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.EditInGrid">
            <summary>
            Indicates if editing should be done inside the grid
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.AutoRowSelect">
            <summary>
            Indicates if first row of new page should be selected automatically. 
            Especially useful in updateable and master/detail grids.
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.Parameters">
            <summary>
            Parameter name/values used to customize the config file using ~paramname~ syntax
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.MasterTableEditorBinding">
            <summary>
            Defines a master/detail relation between this table editor (the detail) to a master table editor
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.AddButtonLocation">
            <summary>
            Specifies preference for edit buttons above or below the grid
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.ShowPrevNextPagerButtons">
            <summary>
            Indicates if Previous and Next page links are present as well as page numbers
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextNextPage">
            <summary>
            Next page link button text
            </summary>
        </member>
        <member name="P:DVXP.DXTableEditor.TableEditor.TextPreviousPage">
            <summary>
            Previous page link button text
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.CreateEditControlEventHandler">
            <summary>
            Delegate for <see cref="E:DVXP.DXTableEditor.TableEditor.CreateEditControl"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.SetEditControlValueEventHandler">
            <summary>
            Delegate for <see cref="E:DVXP.DXTableEditor.TableEditor.SetEditControlValue"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.GetEditControlValueEventHandler">
            <summary>
            Delegate for <see cref="E:DVXP.DXTableEditor.TableEditor.GetEditControlValue"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.BeforeRowUpdateEventHandler">
            <summary>
            Delegate for <see cref="E:DVXP.DXTableEditor.TableEditor.BeforeRowUpdate"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.ProvideDefaultRowValuesEventHandler">
            <summary>
            Delegate for <see cref="E:DVXP.DXTableEditor.TableEditor.ProvideDefaultRowValues"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.FieldParseEventHandler">
            <summary>
            Delegate for <see cref="E:DVXP.DXTableEditor.TableEditor.FieldParse"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.FieldFormatEventHandler">
            <summary>
            Delegate for <see cref="E:DVXP.DXTableEditor.TableEditor.FieldFormat"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.ProvideSelectCommandEventHandler">
            <summary>
            Delegate for the <see cref="E:DVXP.DXTableEditor.TableEditor.ProvideSelectCommand"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.ProvideUpdateCommandsEventHandler">
            <summary>
            Delegate for the <see cref="E:DVXP.DXTableEditor.TableEditor.ProvideUpdateCommands"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.ProvideAutoIncrementIdCommandEventHandler">
            <summary>
            Delegate for <see cref="E:DVXP.DXTableEditor.TableEditor.ProvideAutoIncrementIdCommand"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.ProvideLookupCommandEventHandler">
            <summary>
            Delegate for <see cref="E:DVXP.DXTableEditor.TableEditor.ProvideLookupCommand"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.RowSelectedEventHandler">
            <summary>
            Delegate for <see cref="E:DVXP.DXTableEditor.TableEditor.RowSelected"/> event
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.TableEditor.AddButtonLocationType">
            <summary>
            Location of add button
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.AddButtonLocationType.Top">
            <summary>
            Show Add button above the grid
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.TableEditor.AddButtonLocationType.Bottom">
            <summary>
            Show Add button below the grid
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.ParamEvaluator">
            <summary>
            Replaces ~parameter~ in the config file
            </summary>
        </member>
        <member name="F:DVXP.DXTableEditor.ParamEvaluator.parameters">
            <summary>
            The parameter collection where the value should be lookup up in
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.Design.MasterDetailAssignmentConverter">
            <summary>
            Properties window convertor for MasterDetailAssignment
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.MasterDetailAssignmentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.MasterDetailAssignmentConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.MasterDetailAssignmentConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.MasterDetailAssignmentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.MasterDetailAssignmentConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.MasterDetailAssignmentConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.Design.MasterTableEditorConverter">
            <summary>
            Drop down converter presenting potential parent grids
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.MasterTableEditorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates that we want to populate a combo with masters
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.MasterTableEditorConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Only allow existing controls to be the master
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.MasterTableEditorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Provide the list of potential masters for this details grid
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:DVXP.DXTableEditor.Design.MasterDetailEditor">
            <summary>
            Provides an design edit window for the MasterDetailAssignment property
            of the table editor
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.MasterDetailEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.Design.TableEditorControlDesigner">
            <summary>
            Summary description for Designer.
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.TableEditorControlDesigner.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.TableEditorControlDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:DVXP.DXTableEditor.Design.TableEditorControlDesigner.GetDesignTimeHtml">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:DVXP.DXTableEditor.Design.TableEditorControlDesigner.AllowResize">
            <summary>
            
            </summary>
        </member>
        <member name="T:DVXP.DXTableEditor.WebControlUtil">
            <summary>
            ASP.NET Web control utilities
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.WebControlUtil.SelectItemByValue(System.Web.UI.WebControls.ListControl,System.String)">
            <summary>
            Selects the item in the given listcontrol or dropdown list with the given value
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.WebControlUtil.SelectedItemText(System.Web.UI.WebControls.ListControl)">
            <summary>
            Returns the text of selected item, or an empty string
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.WebControlUtil.SelectedItemValue(System.Web.UI.WebControls.ListControl)">
            <summary>
            Returns the Value of selected item, or an empty string
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.WebControlUtil.GridFixPagingOverflow(System.Web.UI.WebControls.DataGrid)">
            <summary>
            Resets the current page index of the given datagrid if its current datasource
            does not contain enough rows to display the given current page index
            </summary>
        </member>
        <member name="M:DVXP.DXTableEditor.WebControlUtil.ImageWhitespaceRemove(System.Web.UI.Control)">
            <summary>
            Removes blank content immediately after images / icons, to prevent padding pixels just below 
            an HTML image in table rows
            </summary>
        </member>
    </members>
</doc>
